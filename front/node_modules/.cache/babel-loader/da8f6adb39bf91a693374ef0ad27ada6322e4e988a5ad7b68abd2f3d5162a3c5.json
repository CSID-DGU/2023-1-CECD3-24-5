{"ast":null,"code":"var _jsxFileName = \"/Users/sim-yeoeun/Documents/GitHub/2023-1-CECD3-24-5/front/src/pages/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport '../styles/QuizPage.css';\nimport Bottom from '../components/Bottom';\n\n//InputPage에서 전달받은 퀴즈데이터 렌더링, 라디오버튼\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ShowQuiz() {\n  _s();\n  //InputPage에서 전달받은 퀴즈데이터\n  //const location = useLocation();\n  //const quizData = location.state.quizData;\n\n  //테스트할 임시 데이터\n  const quizData = [{\n    id: 1,\n    problem: 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n    select: ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n    answer: 2\n  }, {\n    id: 2,\n    problem: 'Which of the following sorting algorithms is NOT stable?',\n    select: ['quick sort', 'insertion sort', 'merge sort', 'bubble sort'],\n    answer: 2\n  }, {\n    id: 3,\n    problem: 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n    select: ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n    answer: 2\n  }, {\n    id: 4,\n    problem: 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n    select: ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n    answer: 2\n  }, {\n    id: 5,\n    problem: 'Which of the following sorting algorithms is NOT stable?',\n    select: ['quick sort', 'insertion sort', 'merge sort', 'bubble sort'],\n    answer: 2\n  }, {\n    id: 6,\n    problem: 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n    select: ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n    answer: 2\n  }];\n\n  //사용자의 답 관리. selectopt = { 문제번호 : 선택지의 인덱스 }\n  const [selectOpt, setSelectOpt] = useState({});\n  //사용자의 틀린 답 관리\n  const [wrongAnswers, setWrongAnswers] = useState({});\n  const handleSelect = (quizId, optionIndex) => {\n    setSelectOpt(prevState => ({\n      ...prevState,\n      [quizId]: optionIndex\n    }));\n  };\n  const handleAnswer = () => {\n    let correctAnswers = 0;\n    quizData.forEach(quiz => {\n      //사용자가 해당 문제에 대해 선택한 답이 있다면 -> 사용자가 모두 답을 선택해야만 버튼 누를수 있게 바꾸기\n      if (selectOpt[quiz.id] !== undefined) {\n        //선택한 답과 정답이 일치한다면\n        if (selectOpt[quiz.id] === quiz.answer) {\n          correctAnswers++;\n        } else {//일치하지 않는다면\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizBox\",\n      children: quizData.map(quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [quiz.id, \". \", quiz.problem]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), quiz.select.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `quiz-${quiz.id}`,\n            value: index,\n            checked: selectOpt[quiz.id] === index,\n            onChange: () => handleSelect(quiz.id, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), option]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this))]\n      }, quiz.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnswer,\n      children: \"\\uC815\\uB2F5 \\uD655\\uC778\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n//사용자가 선택한 답에 대해 체크\n_s(ShowQuiz, \"A2i5lXISUsoWa/nSCidiJP3hBwQ=\");\n_c = ShowQuiz;\nfunction CheckAnswer() {}\n_c2 = CheckAnswer;\nfunction QuizPage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ShowQuiz, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c3 = QuizPage;\nexport default QuizPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ShowQuiz\");\n$RefreshReg$(_c2, \"CheckAnswer\");\n$RefreshReg$(_c3, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useNavigate","Bottom","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowQuiz","_s","quizData","id","problem","select","answer","selectOpt","setSelectOpt","wrongAnswers","setWrongAnswers","handleSelect","quizId","optionIndex","prevState","handleAnswer","correctAnswers","forEach","quiz","undefined","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","option","index","type","name","value","checked","onChange","onClick","_c","CheckAnswer","_c2","QuizPage","_c3","$RefreshReg$"],"sources":["/Users/sim-yeoeun/Documents/GitHub/2023-1-CECD3-24-5/front/src/pages/QuizPage.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Navigate, useNavigate} from 'react-router-dom';\nimport '../styles/QuizPage.css';\nimport Bottom from '../components/Bottom'\n\n//InputPage에서 전달받은 퀴즈데이터 렌더링, 라디오버튼\nfunction ShowQuiz() {\n    //InputPage에서 전달받은 퀴즈데이터\n    //const location = useLocation();\n    //const quizData = location.state.quizData;\n\n    //테스트할 임시 데이터\n    const quizData = [\n        {\n            id: 1,\n            problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n            select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n            answer : 2\n        },\n        {\n            id: 2,\n            problem: 'Which of the following sorting algorithms is NOT stable?',\n            select : ['quick sort', 'insertion sort', 'merge sort', 'bubble sort'],\n            answer : 2\n        },\n        {\n            id: 3,\n            problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n            select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n            answer : 2\n        },\n        {\n            id: 4,\n            problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n            select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n            answer : 2\n        },\n        {\n            id: 5,\n            problem: 'Which of the following sorting algorithms is NOT stable?',\n            select : ['quick sort', 'insertion sort', 'merge sort', 'bubble sort'],\n            answer : 2\n        },\n        {\n            id: 6,\n            problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n            select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n            answer : 2\n        }\n    ];\n\n    //사용자의 답 관리. selectopt = { 문제번호 : 선택지의 인덱스 }\n    const [selectOpt, setSelectOpt] = useState({});\n    //사용자의 틀린 답 관리\n    const [wrongAnswers, setWrongAnswers] = useState({});\n\n    const handleSelect = (quizId, optionIndex) => {\n        setSelectOpt(prevState => ({ ...prevState, [quizId] : optionIndex}));\n    }\n\n    const handleAnswer = () => {\n        let correctAnswers = 0;\n\n        quizData.forEach(quiz => {\n            //사용자가 해당 문제에 대해 선택한 답이 있다면 -> 사용자가 모두 답을 선택해야만 버튼 누를수 있게 바꾸기\n            if (selectOpt[quiz.id] !== undefined) {\n                //선택한 답과 정답이 일치한다면\n                if (selectOpt[quiz.id] === quiz.answer) {\n                    \n                    correctAnswers++;\n                }\n                else { //일치하지 않는다면\n\n                }\n            }\n        })\n\n        return (\n            <h3></h3>\n        );\n    }\n\n    return (\n        <>\n            <div className=\"quizBox\">\n                {quizData.map((quiz) => (\n                    <div className= \"quizContainer\" key={quiz.id}>\n                        <h3>{quiz.id}. {quiz.problem}</h3>\n                        {quiz.select.map((option, index) => (\n                            <label key={index}>\n                                <input\n                                    type=\"radio\"\n                                    name={`quiz-${quiz.id}`}\n                                    value={index}\n                                    checked={selectOpt[quiz.id] === index} \n                                    onChange={() => handleSelect(quiz.id, index)}\n                                /> \n                                {option}\n                            </label>\n                        ))}\n                    </div>\n                ))}\n            </div>\n            <button onClick={handleAnswer}>정답 확인하기</button>\n        </>\n    );\n}\n\n//사용자가 선택한 답에 대해 체크\nfunction CheckAnswer() {\n    \n}\n\nfunction QuizPage() {\n    return (\n        <>\n            <ShowQuiz/>\n        </>\n    );\n}\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}