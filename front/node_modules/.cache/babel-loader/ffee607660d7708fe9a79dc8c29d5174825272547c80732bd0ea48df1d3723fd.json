{"ast":null,"code":"import _defineProperty from\"/Users/sim-yeoeun/Documents/GitHub/2023-1-CECD3-24-5/front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/sim-yeoeun/Documents/GitHub/2023-1-CECD3-24-5/front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/sim-yeoeun/Documents/GitHub/2023-1-CECD3-24-5/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{useNavigate,useLocation}from'react-router-dom';import'../styles/QuizPage.css';import useLocalStorage from'../hooks/useLocalStorage';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ShowQuiz(){//InputPage로 다시 이동하기 위함\nvar navigate=useNavigate();var location=useLocation();var quizData=location.state||[];//테스트할 임시 데이터\n// const quizData = [\n//     {\n//         id: 1,\n//         problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n//         select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n//         answer : 2\n//     },\n//     {\n//         id: 2,\n//         problem: 'Which of the following sorting algorithms is NOT stable?',\n//         select : ['quick sort', 'insertion sort', 'merge sort', 'bubble sort'],\n//         answer : 2\n//     },\n//     {\n//         id: 3,\n//         problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n//         select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n//         answer : 2\n//     },\n//     {\n//         id: 4,\n//         problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n//         select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n//         answer : 2\n//     },\n//     {\n//         id: 5,\n//         problem: 'Which of the following sorting algorithms is NOT stable?',\n//         select : ['quick sort', 'insertion sort', 'merge sort', 'bubble sort'],\n//         answer : 2\n//     },\n//     {\n//         id: 6,\n//         problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n//         select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n//         answer : 2\n//     }\n// ];\n//사용자의 답 관리. selectopt = { 문제번호 : 선택지의 인덱스 }\nvar _useLocalStorage=useLocalStorage('selectOpt',{}),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),selectOpt=_useLocalStorage2[0],setSelectOpt=_useLocalStorage2[1];//사용자의 틀린 답 관리. wrongAnswers = bool형\nvar _useLocalStorage3=useLocalStorage('wrongAnswers',{}),_useLocalStorage4=_slicedToArray(_useLocalStorage3,2),wrongAnswers=_useLocalStorage4[0],setWrongAnswers=_useLocalStorage4[1];//사용자의 맞은 문제 수를 저장하는 상태\nvar _useLocalStorage5=useLocalStorage('correctCnt',0),_useLocalStorage6=_slicedToArray(_useLocalStorage5,2),correctCnt=_useLocalStorage6[0],setCorrectCnt=_useLocalStorage6[1];//정답 확인하기 버튼을 눌렀는지 확인하는 상태\n//사용자가 답을 체크한 후, 상태를 localStorage에 저장 -> 새로고침 해도 checkedAnswer == true인 상태를 로드\nvar _useLocalStorage7=useLocalStorage('checkedAnswer',false),_useLocalStorage8=_slicedToArray(_useLocalStorage7,2),checkedAnswer=_useLocalStorage8[0],setCheckedAnswer=_useLocalStorage8[1];var handleSelect=function handleSelect(quizId,optionIndex){setSelectOpt(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},quizId,optionIndex));});};var handleAnswer=function handleAnswer(){var correct=0;var wrongs={};quizData.forEach(function(quiz){//사용자가 해당 문제에 대해 선택한 답이 있다면 -> 사용자가 모두 답을 선택해야만 버튼 누를수 있게 바꾸기\nif(selectOpt[quiz.id]!==undefined){//선택한 답과 정답이 일치한다면\nif(selectOpt[quiz.id]===quiz.answer){correct++;}else{//일치하지 않는다면\nwrongs[quiz.id]=true;}}});setCorrectCnt(correct);setWrongAnswers(wrongs);setCheckedAnswer(true);};var handleRestart=function handleRestart(){// 로컬 스토리지의 모든 항목 초기화\nlocalStorage.clear();navigate('/InputPage');};return/*#__PURE__*/_jsxs(_Fragment,{children:[checkedAnswer&&/*#__PURE__*/_jsxs(\"h1\",{className:\"answerText\",children:[\" \",/*#__PURE__*/_jsxs(\"span\",{children:[quizData.length,\" \\uBB38\\uC81C\"]}),\" \\uC911 \",/*#__PURE__*/_jsxs(\"span\",{children:[correctCnt,\" \\uBB38\\uC81C\"]}),\" \\uB9DE\\uC558\\uC2B5\\uB2C8\\uB2E4! \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"quizBox\",children:quizData.map(function(quiz){return/*#__PURE__*/_jsxs(\"div\",{className:\"quizContainer\",children:[/*#__PURE__*/_jsxs(\"h3\",{style:wrongAnswers[quiz.id]?{color:'red'}:{},children:[quiz.id,\". \",quiz.problem]}),quiz.select.map(function(option,index){return/*#__PURE__*/_jsxs(\"label\",{className:\"quizOption\",style:wrongAnswers[quiz.id]&&index===quiz.answer?{color:'red'}:{},children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"quiz-\".concat(quiz.id),value:index,onChange:function onChange(){return handleSelect(quiz.id,index);},disabled:checkedAnswer,checked:selectOpt[quiz.id]===index}),option]},index);})]},quiz.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"answerBtnBox\",children:checkedAnswer?/*#__PURE__*/ //사용자가 정답 확인하기 버튼을 누르면 -> 다시 출제하기 버튼 보이기\n_jsx(\"button\",{onClick:handleRestart,children:\"\\uB2E4\\uC2DC \\uCD9C\\uC81C\\uD558\\uAE30\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleAnswer,children:\"\\uC815\\uB2F5 \\uD655\\uC778\\uD558\\uAE30\"})})]});}function QuizPage(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ShowQuiz,{})});}export default QuizPage;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","useLocalStorage","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","ShowQuiz","navigate","location","quizData","state","_useLocalStorage","_useLocalStorage2","_slicedToArray","selectOpt","setSelectOpt","_useLocalStorage3","_useLocalStorage4","wrongAnswers","setWrongAnswers","_useLocalStorage5","_useLocalStorage6","correctCnt","setCorrectCnt","_useLocalStorage7","_useLocalStorage8","checkedAnswer","setCheckedAnswer","handleSelect","quizId","optionIndex","prevState","_objectSpread","_defineProperty","handleAnswer","correct","wrongs","forEach","quiz","id","undefined","answer","handleRestart","localStorage","clear","children","className","length","map","style","color","problem","select","option","index","type","name","concat","value","onChange","disabled","checked","onClick","QuizPage"],"sources":["/Users/sim-yeoeun/Documents/GitHub/2023-1-CECD3-24-5/front/src/pages/QuizPage.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../styles/QuizPage.css';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nfunction ShowQuiz() {\n    //InputPage로 다시 이동하기 위함\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const quizData = location.state || [];\n\n    //테스트할 임시 데이터\n    // const quizData = [\n    //     {\n    //         id: 1,\n    //         problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n    //         select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n    //         answer : 2\n    //     },\n    //     {\n    //         id: 2,\n    //         problem: 'Which of the following sorting algorithms is NOT stable?',\n    //         select : ['quick sort', 'insertion sort', 'merge sort', 'bubble sort'],\n    //         answer : 2\n    //     },\n    //     {\n    //         id: 3,\n    //         problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n    //         select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n    //         answer : 2\n    //     },\n    //     {\n    //         id: 4,\n    //         problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n    //         select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n    //         answer : 2\n    //     },\n    //     {\n    //         id: 5,\n    //         problem: 'Which of the following sorting algorithms is NOT stable?',\n    //         select : ['quick sort', 'insertion sort', 'merge sort', 'bubble sort'],\n    //         answer : 2\n    //     },\n    //     {\n    //         id: 6,\n    //         problem : 'What is the time complexity of Bubble Sort in the worst-case scenario?',\n    //         select : ['O(n^2)', 'O(n log n)', 'O(n)', 'O(1)'],\n    //         answer : 2\n    //     }\n    // ];\n\n\n\n    //사용자의 답 관리. selectopt = { 문제번호 : 선택지의 인덱스 }\n    const [selectOpt, setSelectOpt] = useLocalStorage('selectOpt', {});\n    //사용자의 틀린 답 관리. wrongAnswers = bool형\n    const [wrongAnswers, setWrongAnswers] = useLocalStorage('wrongAnswers', {});\n    //사용자의 맞은 문제 수를 저장하는 상태\n    const [correctCnt, setCorrectCnt] = useLocalStorage('correctCnt', 0);\n    //정답 확인하기 버튼을 눌렀는지 확인하는 상태\n    //사용자가 답을 체크한 후, 상태를 localStorage에 저장 -> 새로고침 해도 checkedAnswer == true인 상태를 로드\n    const [checkedAnswer, setCheckedAnswer] = useLocalStorage('checkedAnswer', false);\n\n\n    const handleSelect = (quizId, optionIndex) => {\n        setSelectOpt(prevState => ({ ...prevState, [quizId] : optionIndex}));\n    }\n\n    const handleAnswer = () => {\n        let correct = 0;\n        const wrongs = {};\n\n        quizData.forEach(quiz => {\n            //사용자가 해당 문제에 대해 선택한 답이 있다면 -> 사용자가 모두 답을 선택해야만 버튼 누를수 있게 바꾸기\n            if (selectOpt[quiz.id] !== undefined) {\n                //선택한 답과 정답이 일치한다면\n                if (selectOpt[quiz.id] === quiz.answer) {\n                    correct++;\n                }\n                else { //일치하지 않는다면\n                    wrongs[quiz.id] = true;\n                }\n            }\n        })\n\n        setCorrectCnt(correct);\n        setWrongAnswers(wrongs);\n        setCheckedAnswer(true);\n    };\n\n    const handleRestart = () => {\n        // 로컬 스토리지의 모든 항목 초기화\n        localStorage.clear();\n        navigate('/InputPage');\n    };\n\n    return (\n        <>\n            {checkedAnswer && \n                <h1 className=\"answerText\"> <span>{quizData.length} 문제</span> 중 <span>{correctCnt} 문제</span> 맞았습니다! </h1>\n            }\n            <div className=\"quizBox\">\n                {quizData.map((quiz) => (\n                    <div className= \"quizContainer\" key={quiz.id}>\n                        <h3 style={wrongAnswers[quiz.id] ? {color: 'red'} : {}}>{quiz.id}. {quiz.problem}</h3>\n                        {quiz.select.map((option, index) => (\n                            <label key={index} className=\"quizOption\" style={wrongAnswers[quiz.id] && index === quiz.answer ? {color: 'red'} : {}}>\n                                <input\n                                    type=\"radio\"\n                                    name={`quiz-${quiz.id}`}\n                                    value={index}\n                                    onChange={() => handleSelect(quiz.id, index)}\n                                    disabled={checkedAnswer}\n                                    checked={selectOpt[quiz.id] === index}\n                                /> \n                                {option}\n                            </label>\n                        ))}\n                    </div>\n                ))}\n            </div>\n            <div className=\"answerBtnBox\">\n                {checkedAnswer ? ( //사용자가 정답 확인하기 버튼을 누르면 -> 다시 출제하기 버튼 보이기\n                    <button onClick={handleRestart}>다시 출제하기</button>\n                ) : (\n                    <button onClick={handleAnswer}>정답 확인하기</button>\n                )}\n            </div>\n        </>\n    );\n}\n\n\n\n\nfunction QuizPage() {\n    return (\n        <>\n            {<ShowQuiz />}\n        </>\n    );\n}\n\nexport default QuizPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}